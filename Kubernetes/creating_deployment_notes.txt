apiVersion: apps/v1
kind: Deployment
# A Deployment named nginx-deployment is created, 
# indicated by the .metadata.name field.
metadata:
  name: nginx-deployment
  labels:
    app: nginx
# The Deployment creates three replicated Pods, indicated by the .spec.replicas field.
spec:
  replicas: 3
# The .spec.selector field defines how the Deployment finds which Pods to manage.
# In this case, you select a label that is defined in the Pod template (app: nginx).
# However, more sophisticated selection rules are possible, as long as the Pod template itself
# satisfies the rule.
  selector:
    matchLabels:
      app: nginx

# The template field contains the following sub-fields:
# The Pods are labeled app: nginxusing the .metadata.labels field.
# The Pod template's specification, or .template.spec field, 
# indicates that the Pods run one container, nginx, 
# which runs the nginx Docker Hub image at version 1.14.2.
# Create one container and name it nginx using the .spec.template.spec.containers[0].name field.

  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80


# 1. Create the Deployment by running the following command:
# > kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml

# 2. Run to check if the Deployment was created.
# > kubectl get deployments

# When you inspect the Deployments in your cluster, the following fields are displayed:

# NAME lists the names of the Deployments in the namespace.
# READY displays how many replicas of the application are available to your users. 
# It follows the pattern ready/desired.
# UP-TO-DATE displays the number of replicas that have been updated to achieve the desired state.
# AVAILABLE displays how many replicas of the application are available to your users.
# AGE displays the amount of time that the application has been running.

# 3. To see the Deployment rollout status, run 
# > kubectl rollout status deployment/nginx-deployment

# Run the kubectl get deployments again a few seconds later.

# 4. To see the ReplicaSet (rs) created by the Deployment, run
# > kubectl get rs

ReplicaSet output shows the following fields:

# NAME lists the names of the ReplicaSets in the namespace.
# DESIRED displays the desired number of replicas of the application, 
# which you define when you create the Deployment. This is the desired state.
# CURRENT displays how many replicas are currently running.
# READY displays how many replicas of the application are available to your users.
# AGE displays the amount of time that the application has been running.

# 5. To see the labels automatically generated for each Pod, run
# > kubectl get pods --show-labels