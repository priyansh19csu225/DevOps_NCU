Startup commands
> minikube start
> minikube dashboard
> minikube dashboard --url


Syntax
Use the following syntax to run kubectl commands from your terminal window:

kubectl [command] [TYPE] [NAME] [flags]

where command, TYPE, NAME, and flags are:

command: Specifies the operation that you want to perform on one or more resources, for example create, get, describe, delete.

TYPE: Specifies the resource type. Resource types are case-insensitive and you can specify the singular, plural, or abbreviated forms. For example, the following commands produce the same output:
kubectl get pod pod1
kubectl get pods pod1
kubectl get po pod1

NAME: Specifies the name of the resource. Names are case-sensitive. If the name is omitted, details for all resources are displayed, for example kubectl get pods.

When performing an operation on multiple resources, you can specify each resource by type and name or specify one or more files:

To specify resources by type and name:

To group resources if they are all the same type: TYPE1 name1 name2 name<#>.
Example: kubectl get pod example-pod1 example-pod2

To specify multiple resource types individually: TYPE1/name1 TYPE1/name2 TYPE2/name3 TYPE<#>/name<#>.
Example: kubectl get pod/example-pod1 replicationcontroller/example-rc1

To specify resources with one or more files: -f file1 -f file2 -f file<#>

flags: Specifies optional flags. For example, you can use the -s or --server flags to specify the address and port of the Kubernetes API server.

Create a Deployment
1. Use the kubectl create command to create a Deployment that manages a Pod. The Pod runs a Container based on the provided Docker image.

> kubectl create deployment hello-node --image=k8s.gcr.io/echoserver:1.4

2.View the Deployment:
> kubectl get deployments

3.View the Pod:
> kubectl get pods

4.View cluster events:
> kubectl get events

5.View the kubectl configuration:
> kubectl config view



Create a Service
1.Expose the Pod to the public internet using the kubectl expose command:
> kubectl expose deployment hello-node --type=LoadBalancer --port=8080

2.View the Service you created:
> kubectl get services

3.Run the following command:
> minikube service hello-node

Clean up
Now you can clean up the resources you created in your cluster:
> kubectl delete service hello-node
> kubectl delete deployment hello-node

Stop the Minikube virtual machine (VM):
> minikube stop

Delete the Minikube VM:
> minikube delete

Get details of your Deployment:
> kubectl describe deployments